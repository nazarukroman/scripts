#!/bin/bash

# ====== –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã ======
RESET="\033[0m"
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"

# ====== –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ======
log_info() {
  echo -e "${BLUE}[INFO]${RESET} $1"
}

log_success() {
  echo -e "${GREEN}[SUCCESS]${RESET} $1"
}

log_warning() {
  echo -e "${YELLOW}[WARNING]${RESET} $1"
}

log_error() {
  echo -e "${RED}[ERROR]${RESET} $1"
  exit 1
}

# ====== –°—Ç–∞—Ä—Ç —Ö—É–∫–∞ ======
log_info "üöÄ Pre-push hook started..."

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞
REPO_ROOT=$(git rev-parse --show-toplevel)
PACKAGE_PATH="$REPO_ROOT/package.json"
DEFAULT_BRANCH="origin/master"
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
BASE_COMMIT=$(git merge-base --fork-point "$DEFAULT_BRANCH" "$CURRENT_BRANCH")

source "$REPO_ROOT"/.env

echo "$WORKSPACE_PREFIX"

if [ -z "$BASE_COMMIT" ]; then
  BASE_COMMIT=DEFAULT_BRANCH
fi

log_info "üîç –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"
log_info "üìå –ë–∞–∑–æ–≤—ã–π –∫–æ–º–º–∏—Ç: $BASE_COMMIT"

# –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
CHANGED_FILES=$(git diff --name-only "$BASE_COMMIT".."$CURRENT_BRANCH")

if [ -z "$CHANGED_FILES" ]; then
  log_success "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–∞–π–ª–∞—Ö. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É."
  exit 0
fi

if [ ! -f "$PACKAGE_PATH" ]; then
  log_error "–§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
fi

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ workspaces
WORKSPACES=$(jq -r '.workspaces[]' "$PACKAGE_PATH")

if [ -z "$WORKSPACES" ]; then
  log_warning "Workspaces –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ package.json. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É."
  exit 0
fi

MODIFIED_SPACES=()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –∫ workspace
for WS in $WORKSPACES; do
  WS_DIR=${WS//\*/}

  for FILE in $CHANGED_FILES; do
    if [[ $FILE == $WS_DIR* ]]; then
      MODIFIED_SPACES+=("$WS_DIR")
      break
    fi
  done
done

# –ï—Å–ª–∏ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö workspace –Ω–µ—Ç ‚Äî –≤—ã—Ö–æ–¥–∏–º
if [ ${#MODIFIED_SPACES[@]} -eq 0 ]; then
  log_success "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≤–æ—Ä–∫—Å–ø–µ–π—Å–∞—Ö. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É."
  exit 0
fi

# –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
UNIQUE_SPACES=($(echo "${MODIFIED_SPACES[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))

log_info "üõ†  –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ workspaces:"
echo "${UNIQUE_SPACES[@]}" | awk '{print "   - " $0}'

for SPACE in "${UNIQUE_SPACES[@]}"; do
  PREPARED_SPACE="${SPACE##*/}"
  PREPARED_SPACE="${PREPARED_SPACE//\*/}"

  if [ -n "$WORKSPACE_PREFIX" ]; then
    PREPARED_SPACE="$WORKSPACE_PREFIX/$PREPARED_SPACE"
  fi

  log_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º pre-push –¥–ª—è $PREPARED_SPACE..."
  yarn workspace "$PREPARED_SPACE" run pre-push || log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ pre-push –¥–ª—è $PREPARED_SPACE!"
done
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
yarn run check-branch || log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ç–∫–∏!"

log_success "üéâ –í—Å–µ pre-push —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"
exit 0
